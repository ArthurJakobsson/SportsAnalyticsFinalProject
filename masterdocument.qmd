---
title: "something about sports lol"
author: "Arthur Jakobsson, Elin Jang, Prathik Guduri"
date: "9-1-2023"
format: pdf
---


```{r}
#| warning: false
#| include: false
#| echo: false

library(nflreadr)
library(dplyr)
library(broom)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(glmnet)
library(progressr)
library(MASS)
library("pscl")
library(knitr)
library(mgcv)

# ?nflreadr
# runStats <- load_nextgen_stats(
#   seasons = 2023,
#   stat_type = "rushing",
#   file_type = getOption("nflreadr.prefer", default = "rds")
# )

try({ # prevents cran errors
  passing <- load_nextgen_stats(stat_type = "passing")
  receiving <- load_nextgen_stats(stat_type = "receiving")
  rushing <- load_nextgen_stats(stat_type = "rushing")
})
pbp <- load_pbp(
  seasons = 2019:2023,
  file_type = getOption("nflreadr.prefer", default = "rds")
)
```

```{r}
#| warning: false
#| echo: false
#| include: false


pbp <- pbp %>% drop_na(drive)
pbp$game_drive_id <- paste(pbp$game_id, pbp$drive, sep="_")
```


```{r}
#| warning: false
#| echo: false
#| include: false

game_drive_id = unique(pbp$game_drive_id)
dbd <- data.frame(game_drive_id)


# add columns that we want for now
dbd[, 'num_run'] = NA
dbd[, 'num_pass'] = NA
dbd[, 'num_no_play'] = NA
dbd[, 'num_qb_kneel'] = NA
dbd[, 'num_qb_spike'] = NA
dbd[, 'total_yards_gained'] = NA
dbd[, 'posteam_type'] = NA
dbd[, 'fixed_drive_result'] = NA
dbd[,'yardline_100'] = NA
dbd[, 'weather'] = NA
dbd[, 'temperature'] = NA
dbd[, 'humidity'] = NA
dbd[, 'wind_speed'] = NA
dbd[, 'roof'] = NA


fill_row <- function(row_num, row_id, dbd, data = pbp){
  curr_set = subset(data, data$game_drive_id==row_id)
  dbd$num_run[row_num] = sum(curr_set$play_type=="run", na.rm=T)
  dbd$num_pass[row_num] = sum(curr_set$play_type=="pass", na.rm=T)
  dbd$num_no_play[row_num] = sum(curr_set$play_type == "no_play", na.rm=T)
  dbd$num_qb_kneel[row_num] = sum(curr_set$play_type == "qb_kneel", na.rm=T)
  dbd$num_qb_spike[row_num] = sum(curr_set$play_type == "qb_spike", na.rm=T)
  dbd$total_yards_gained[row_num] = sum(curr_set$yards_gained, na.rm=T)
  dbd$posteam_type[row_num] = curr_set$posteam_type[1]
  dbd$fixed_drive_result[row_num] = curr_set$fixed_drive_result[1]
  dbd$yardline_100[row_num] = curr_set$yardline_100[1]
  dbd$weather[row_num] = curr_set$weather[1]
  dbd$roof[row_num] = curr_set$roof[1]
  dbd$drive_first_downs[row_num] = curr_set$drive_first_downs[1]
  # if (!is.na(dbd$weather[row_num]))
  # {
  #   weather_string = dbd$weather[row_num]
  #   splut = unlist(strsplit(weather_string, split = "[:]"))
  #   dbd$temperature[row_num] = strtoi(substring(splut[[2]], 2, nchar(splut[[2]])-13))
  #   dbd$humidity[row_num] = strtoi(substring(splut[[3]], 2, nchar(splut[[3]])-7))
  #   dbd$wind_speed[row_num] = strtoi(substring(splut[[4]], nchar(splut[[4]])-6, nchar(splut[[4]])-4))
  #   if (is.na(dbd$wind_speed[row_num]))
  #     dbd$wind_speed[row_num] = strtoi(substring(splut[[4]], nchar(splut[[4]])-5, nchar(splut[[4]])-4))
  # }
  return (dbd)
}

dbd_create <- function(dbd){
  for (row_num in 1:nrow(dbd)) 
  {
    dbd <- fill_row(row_num, dbd$game_drive_id[row_num], dbd)
  }
  return (dbd)
}

dbd <- dbd_create(dbd)
```

```{r}
dbd$plays = dbd$num_run + dbd$num_pass + dbd$num_no_play + dbd$num_qb_kneel + dbd$num_qb_spike
dbd$runPercent = (dbd$num_run / dbd$plays) * 100
dbd$passPercent = (dbd$num_pass / dbd$plays) * 100
unique(dbd$fixed_drive_result)

dbd <- dbd %>%
  mutate(drivePoints = case_when(
    fixed_drive_result == "Punt" ~ 0,
    fixed_drive_result == "Touchdown" ~ 7,
    fixed_drive_result == "Opp touchdown" ~ -7,
    fixed_drive_result == "Field goal" ~ 3,
    fixed_drive_result == "Turnover" ~ 0,
    fixed_drive_result == "Turnover on downs" ~ 0,
    fixed_drive_result == "End of half" ~ 0,
    fixed_drive_result == "Missed field goal" ~ 0,
    fixed_drive_result == "Safety" ~ -2,
    TRUE ~ NA_real_  # This line handles any values not explicitly mentioned
  ))
```





```{r}
dbd_no_neg = dbd
dbd_no_neg$total_yards_gained[dbd_no_neg$total_yards_gained<0] <- 0 
dbd_no_neg$drivePoints[dbd_no_neg$drivePoints<0] <- 0 

# ZIP_model <- zeroinfl(total_yards_gained ~yardline_100+runPercent+passPercent+as.factor(posteam_type), data=dbd_no_neg, dist = "poisson", link="logit")
# summary(ZIP_model)

pbp$yards_gained[pbp$yards_gained<0] <- 0 
pbp <- pbp %>% drop_na(drive) %>% drop_na(play_type) %>% drop_na(posteam) %>% filter(play_type =="pass" | play_type=="run")

ZIP_model <- zeroinfl(yards_gained ~ ydstogo+play_type+as.factor(posteam_type), data=pbp, dist = "poisson", link="logit")
summary(ZIP_model)

# library(marginaleffects)
# plot_predictions(ZIP_model, condition = "play_type") 
# plot_predictions(ZIP_model, condition = "posteam_type")
# plot_predictions(ZIP_model, condition = "ydstogo")
# plot_slopes(ZIP_model, variables = "play_type", condition = "ydstogo")
```

```{r}
dbd_no_neg$more_runs = dbd_no_neg$runPercent>50
DBD_ZIP_binary <- gam(drivePoints>0 ~ more_runs+as.factor(posteam_type), data=dbd_no_neg, family = binomial)
summary(DBD_ZIP_binary)


DBD_ZIP <- gam(drivePoints>0 ~ s(runPercent)+as.factor(posteam_type)+s(plays), data=dbd_no_neg)
plot(DBD_ZIP, col="cornflowerblue")
```


```{r}
gamModel <- gam(epa ~ play_type + factor(down) + s(ydstogo), data = pbp, na.action=na.exclude)
summary(gamModel)
plot(gamModel, pages = 2)
```



```{r}
lmModel = lm(epa ~ play_type + factor(down) + ydstogo, data = pbp)
summary(lmModel)
```


