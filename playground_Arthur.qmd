---
title: "Final Project Playground"
author: "Arthur Jakobsson"
date: "04-21-2024"
format: pdf
---

```{r}
#| warning: false
#| include: false
#| echo: false

library(nflreadr)
library(dplyr)
library(broom)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(glmnet)
library(progressr)

# ?nflreadr
# runStats <- load_nextgen_stats(
#   seasons = 2023,
#   stat_type = "rushing",
#   file_type = getOption("nflreadr.prefer", default = "rds")
# )

try({ # prevents cran errors
  passing <- load_nextgen_stats(stat_type = "passing")
  receiving <- load_nextgen_stats(stat_type = "receiving")
  rushing <- load_nextgen_stats(stat_type = "rushing")
})
pbp <- load_pbp(
  seasons = 2023,
  file_type = getOption("nflreadr.prefer", default = "rds")
)
```

```{r}
pbp <- pbp %>% drop_na(drive) %>% drop_na(play_type) %>% drop_na(posteam) %>% filter(play_type != "kickoff" & play_type != "extra_point" & play_type != "field_goal" & play_type != "punt")
pbp$game_drive_id <- paste(pbp$game_id, pbp$drive, sep="_")
```


```{r}
game_drive_id = unique(pbp$game_drive_id)
dbd <- data.frame(game_drive_id)


# add columns that we want for now
dbd[, 'num_run'] = NA
dbd[, 'num_pass'] = NA
dbd[, 'num_no_play'] = NA
dbd[, 'num_qb_kneel'] = NA
dbd[, 'num_qb_spike'] = NA
dbd[, 'total_yards_gained'] = NA
dbd[, 'posteam_type'] = NA
dbd[, 'fixed_drive_result'] = NA
dbd[,'yardline_100'] = NA
dbd[, 'weather'] = NA
dbd[, 'temperature'] = NA
dbd[, 'humidity'] = NA
dbd[, 'wind_speed'] = NA
dbd[, 'roof'] = NA


fill_row <- function(row_num, row_id, dbd, data = pbp){
  curr_set = subset(data, data$game_drive_id==row_id)
  dbd$num_run[row_num] = sum(curr_set$play_type=="run", na.rm=T)
  dbd$num_pass[row_num] = sum(curr_set$play_type=="pass", na.rm=T)
  dbd$num_no_play[row_num] = sum(curr_set$play_type == "no_play", na.rm=T)
  dbd$num_qb_kneel[row_num] = sum(curr_set$play_type == "qb_kneel", na.rm=T)
  dbd$num_qb_spike[row_num] = sum(curr_set$play_type == "qb_spike", na.rm=T)
  dbd$total_yards_gained[row_num] = sum(curr_set$yards_gained, na.rm=T)
  dbd$posteam_type[row_num] = curr_set$posteam_type[1]
  dbd$fixed_drive_result[row_num] = curr_set$fixed_drive_result[1]
  dbd$yardline_100[row_num] = curr_set$yardline_100[1]
  dbd$weather[row_num] = curr_set$weather[1]
  dbd$roof[row_num] = curr_set$roof[1]
  dbd$drive_first_downs[row_num] = curr_set$drive_first_downs[1]
  if (!is.na(dbd$weather[row_num]))
  {
    weather_string = dbd$weather[row_num]
    splut = unlist(strsplit(weather_string, split = "[:]"))
    dbd$temperature[row_num] = strtoi(substring(splut[[2]], 2, nchar(splut[[2]])-13))
    dbd$humidity[row_num] = strtoi(substring(splut[[3]], 2, nchar(splut[[3]])-7))
    dbd$wind_speed[row_num] = strtoi(substring(splut[[4]], nchar(splut[[4]])-6, nchar(splut[[4]])-4))
    if (is.na(dbd$wind_speed[row_num]))
      dbd$wind_speed[row_num] = strtoi(substring(splut[[4]], nchar(splut[[4]])-5, nchar(splut[[4]])-4))
  }
  return (dbd)
}

dbd_create <- function(dbd){
  for (row_num in 1:nrow(dbd)) 
  {
    dbd <- fill_row(row_num, dbd$game_drive_id[row_num], dbd)
  }
  return (dbd)
}

dbd <- dbd_create(dbd)
```

# EDA

```{r}
numeric_vars <- c("num_run", "num_pass", "num_no_play", "num_qb_kneel", "num_qb_spike", "total_yards_gained", "yardline_100", "temperature", "humidity", "wind_speed", "drive_first_downs")


# Histogram for numeric variables
hist_plot <- lapply(numeric_vars, function(var) {
  ggplot(dbd, aes(x = !!as.name(var))) +
    geom_histogram(fill = "#0072B2", color = "#0072B2", bins = 20) +
    labs(title = var) +
    theme_minimal()
})

(hist_plot)

# Boxplot for numeric variables by 'roof'
# boxplot_roof <- lapply(numeric_vars, function(var) {
#   ggplot(dbd, aes(x = roof, y = !!as.name(var), fill = roof)) +
#     geom_boxplot() +
#     labs(title = var) +
#     theme_minimal()
# })

# (boxplot_roof)

# Now let's explore categorical variables

# Bar plot for 'fixed_drive_result'
bar_drive_result <- ggplot(dbd, aes(x = fixed_drive_result, fill = fixed_drive_result)) +
  geom_bar() +
  labs(title = "fixed_drive_result") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 60, hjust = 1))

(bar_drive_result)

study_vars <- c("num_run", "num_pass", "num_no_play", "num_qb_kneel", "num_qb_spike", "total_yards_gained", "yardline_100", "drive_first_downs")

scatter_matrix <- lapply(study_vars, function(var) {
  ggplot(dbd, aes_string(x = var, y = "posteam_type")) +
    geom_boxplot(fill = "#0072B2") +
    labs(title = paste(var, "vs. posteam")) +
    theme_minimal()
})

(scatter_matrix)
```
```{r}
#| warning: false
#| message: false
play_vars <- c("num_run", "num_pass", "num_no_play", "num_qb_kneel", "num_qb_spike", "total_yards_gained", "yardline_100")

# Weather related variables
weather_vars <- c("temperature", "humidity", "wind_speed")

# Create scatterplots for each combination
scatterplots <- lapply(play_vars, function(play_var) {
  lapply(weather_vars, function(weather_var) {
    ggplot(dbd, aes_string(x = weather_var, y = play_var)) +
      geom_point() +
      labs(title = paste(weather_var, "vs.", play_var)) +
      theme_minimal()
  })
})

# Flatten the list structure
scatterplots <- unlist(scatterplots, recursive = FALSE)

# Print scatterplots
(scatterplots)
```











